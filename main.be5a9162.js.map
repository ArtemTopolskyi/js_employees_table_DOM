{"version":3,"sources":["scripts/main.js"],"names":["body","document","tableBody","querySelector","tableHead","minNameLength","minPositionLength","minAge","maxAge","isSortedAscendingOrder","lastSortedColumnIndex","form","createElement","classList","add","action","method","formInnerHTML","createNotification","type","title","description","posTop","posRight","notification","titleElement","paragraphElement","style","top","right","setAttribute","fontSize","textContent","append","setTimeout","remove","validateFormData","employee","employeeName","name","employeeAge","formatNumber","age","employeePosition","position","length","formatToSalary","salary","splitedSalary","toString","split","reverse","formatedSalary","i","push","join","number","replace","stringsCompare","first","second","localeCompare","numbersCompare","insertAdjacentHTML","addEventListener","e","column","target","closest","columnIndex","sortedRows","parentElement","children","findIndex","child","columnName","sort","currentRow","nextRow","row","highlightedRow","find","contains","toggle","preventDefault","formData","FormData","newEmployeeData","Object","fromEntries","entries","reset","createdRow","office"],"mappings":"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","file":"main.be5a9162.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.body;\nconst tableBody = body.querySelector('tbody');\nconst tableHead = body.querySelector('thead');\n\nconst minNameLength = 4;\nconst minPositionLength = 4;\nconst minAge = 18;\nconst maxAge = 90;\n\nlet isSortedAscendingOrder = false;\nlet lastSortedColumnIndex = -1;\n\n// creating and adding form\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\nform.action = '#';\nform.method = 'GET';\n\nconst formInnerHTML = `\n  <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\n  <label>Position:\n    <input name=\"position\" type=\"text\" data-qa=\"position\">\n  </label>\n  <label>Office:\n    <select name=\"office\" type=\"text\" data-qa=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\n  <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\"></label>\n  <button type=\"submit\">Save to table</button>\n`;\n\nform.insertAdjacentHTML('afterbegin', formInnerHTML);\nbody.append(form);\n\n// sorting columns\n\ntableHead.addEventListener('click', e => {\n  const column = e.target.closest('th');\n\n  if (!column) {\n    return;\n  }\n\n  const columnIndex = [...column.parentElement.children]\n    .findIndex(child => child === column);\n  const columnName = column.textContent;\n  let sortedRows;\n\n  if (columnIndex !== lastSortedColumnIndex) {\n    isSortedAscendingOrder = false;\n    lastSortedColumnIndex = columnIndex;\n  }\n\n  switch (columnName) {\n    case 'Name':\n    case 'Position':\n    case 'Office':\n      sortedRows = [...tableBody.children].sort((currentRow, nextRow) => {\n        return isSortedAscendingOrder\n          ? stringsCompare(\n            nextRow.children[columnIndex].textContent,\n            currentRow.children[columnIndex].textContent,\n          )\n          : stringsCompare(\n            currentRow.children[columnIndex].textContent,\n            nextRow.children[columnIndex].textContent,\n          );\n      });\n      break;\n    case 'Age':\n    case 'Salary':\n      sortedRows = [...tableBody.children].sort((currentRow, nextRow) => {\n        return isSortedAscendingOrder\n          ? numbersCompare(\n            formatNumber(nextRow.children[columnIndex].textContent),\n            formatNumber(currentRow.children[columnIndex].textContent),\n          )\n          : numbersCompare(\n            formatNumber(currentRow.children[columnIndex].textContent),\n            formatNumber(nextRow.children[columnIndex].textContent),\n          );\n      });\n      break;\n  }\n\n  isSortedAscendingOrder = !isSortedAscendingOrder;\n  tableBody.append(...sortedRows);\n});\n\n// highlight row\n\ntableBody.addEventListener('click', e => {\n  const row = e.target.closest('tr');\n\n  if (!row) {\n    return;\n  }\n\n  const highlightedRow = [...tableBody.children].find(\n    currentRow => currentRow.classList.contains('active')\n  );\n\n  if (highlightedRow && highlightedRow !== row) {\n    highlightedRow.classList.remove('active');\n  }\n\n  row.classList.toggle('active');\n});\n\n// process the form\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const formData = new FormData(form);\n  const newEmployeeData = Object.fromEntries(formData.entries());\n\n  if (!validateFormData(newEmployeeData)) {\n    createNotification('error', 'Error!', 'Wrong data!', 20, 20);\n    form.reset();\n\n    return;\n  }\n\n  createNotification('success', 'Success!', 'Data successfully added.', 20, 20);\n\n  const createdRow = `\n    <tr>\n      <td>${newEmployeeData.name}</td>\n      <td>${newEmployeeData.position}</td>\n      <td>${newEmployeeData.office}</td>\n      <td>${formatNumber(newEmployeeData.age)}</td>\n      <td>${formatToSalary(formatNumber(newEmployeeData.salary))}</td>\n    </tr>\n  `;\n\n  tableBody.insertAdjacentHTML('afterbegin', createdRow);\n});\n\n// create notification\n\nfunction createNotification(type, title, description, posTop, posRight) {\n  const notification = document.createElement('div');\n  const titleElement = document.createElement('h2');\n  const paragraphElement = document.createElement('p');\n\n  notification.classList.add('notification', type);\n  notification.style.top = posTop + 'px';\n  notification.style.right = posRight + 'px';\n  notification.setAttribute('data-qa', 'notification');\n\n  titleElement.classList.add('title');\n  titleElement.style.fontSize = '18px';\n  titleElement.textContent = title;\n\n  paragraphElement.textContent = description;\n\n  notification.append(titleElement, paragraphElement);\n  body.append(notification);\n\n  setTimeout(() => notification.remove(), 2000);\n}\n\nfunction validateFormData(employee) {\n  const employeeName = employee.name;\n  const employeeAge = formatNumber(employee.age);\n  const employeePosition = employee.position;\n\n  if (\n    employeeName.length < minNameLength || employeePosition < minPositionLength\n  ) {\n    return false;\n  }\n\n  if (employeeAge < minAge || employeeAge > maxAge) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction formatToSalary(salary) {\n  const splitedSalary = salary.toString().split('').reverse();\n  const formatedSalary = [];\n\n  for (let i = 0; i < splitedSalary.length; i++) {\n    formatedSalary.push(splitedSalary[i]);\n\n    if ((i + 1) % 3 === 0 && i !== splitedSalary.length - 1) {\n      formatedSalary.push(',');\n    }\n  }\n\n  formatedSalary.push('$');\n\n  return formatedSalary.reverse().join('');\n}\n\nfunction formatNumber(number) {\n  return +number.replace(/[^0-9.]/g, '');\n}\n\nfunction stringsCompare(first, second) {\n  return first.localeCompare(second);\n}\n\nfunction numbersCompare(first, second) {\n  return first - second;\n}\n"]}